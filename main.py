import calc
from calc import np

#--task 6(г)----
y = np.matrix([[90],[30],[45]])
a = np.matrix([[0.3, 0.2, 0.4],[0.2,0.4,0.2],[0.1,0.3,0.1]])
dy = np.matrix([[20],[10],[-20]])
t = np.matrix([[2],[3.5],[1.5]])
f = np.matrix([[0.6],[2.5],[2.5]])
EAmat1 =np.eye(a.shape[0]) - a
det = np.linalg.det(EAmat1)
print(f'Определитель матрицы (E-A)\n{det}')
EAmat = np.linalg.inv(EAmat1)
print(f'Обратная матрица: \n{EAmat}')
print(f'Проверка обратной матрицы\n{np.dot(EAmat1,EAmat)}')
dy = calc.convertFloat(y,dy)
print(f'Изменения конечного продукта в стоимостном выражении\n{dy}')
dx = calc.grossProd1(EAmat,dy)
print(f'Изменения валового выпуска\n{dx}')
dxmat = calc.intersectoralFlows(a, dx)
print(f'Изменения межотраслевых потоков\n{dxmat}')
dxt = calc.addNeed(t,dx)
print(f'Изменение потребности в трудовых ресурсах по отраслям\n{dxt}')
dopf = calc.addNeed(f,dx)
print(f'Изменение потребности в ОПФ по отраслям\n{dopf}')
x = calc.grossProd1(EAmat, y)
print(f'Объем валового выпуска: \n{x}')
print(f'Проверка: \n{calc.checkX(x,a,y)}')
xmat = calc.intersectoralFlows(a,x)
print(f'Межотраслевые потоки\n{xmat}')
xpr = calc.promProd(xmat)
print(f'Промежуточный продукт по отраслям\n{xpr}')
matcosts = calc.matCosts(xmat)
print(f'Материальные затраты в каждую потребляющую отрасль\n{matcosts}')
z = calc.netProd(x,matcosts)
print(f'Условно-чистый продукт\n{z}')
a1 = calc.indirMatCosts(a)
print(f'Матрица косвенных материальных затрат\n{a1}')
xt = calc.laborOpfCosts(t, x)
print(f'Затраты живого труда\n{xt}')
F = calc.laborOpfCosts(f, x)
print(f'Затраты основных производственных фондов: \n{F}')
C = calc.fullMatCosts(EAmat)
print(f'Матрица полных материальных затрат: \n{C}')